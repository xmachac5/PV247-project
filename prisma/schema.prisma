// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL") // uses connection pooling
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  password      String
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model ReportPersonalData {
  id       String @id @default(cuid())
  reportId String @unique
  report   Report @relation(fields: [reportId], references: [id], onDelete: Cascade)

  name     String
  surname  String
  dateBorn DateTime
  address  String
  email    String
  phone    String
}

model Report {
  id           String              @id @default(cuid())
  createdAt    DateTime            @default(now())
  title        String
  reason       String
  description  String
  password     String
  datetime     DateTime
  personalData ReportPersonalData?
  reportType   ReportType? @relation(fields: [reportTypeId], references: [id])
  reportTypeId String?
  state       String              @default("New")
}

model ReportType {
  id   String @id @default(cuid())
  name String
  reports Report[]
}
